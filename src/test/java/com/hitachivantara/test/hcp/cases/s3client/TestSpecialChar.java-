/*                                                                             
 * Copyright (C) 2019 Hitachi Vantara Inc.                                     
 *                                                                             
 * Licensed under the Apache License, Version 2.0 (the "License");           
 * you may not use this file except in compliance with the License.            
 * You may obtain a copy of the License at                                     
 *                                                                             
 *      http://www.apache.org/licenses/LICENSE-2.0                             
 *                                                                             
 * Unless required by applicable law or agreed to in writing, software         
 * distributed under the License is distributed on an "AS IS" BASIS,         
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    
 * See the License for the specific language governing permissions and         
 * limitations under the License.                                              
 */                                                                            
package com.hitachivantara.test.hcp.cases.s3client;

import static org.junit.Assert.assertTrue;

import java.io.File;

import org.junit.Test;

import com.hitachivantara.common.ex.HSCException;
import com.hitachivantara.common.util.StreamUtils;
import com.hitachivantara.hcp.standard.api.event.ListObjectHandler;
import com.hitachivantara.hcp.standard.define.NextAction;
import com.hitachivantara.hcp.standard.model.HCPObject;
import com.hitachivantara.hcp.standard.model.HCPObjectEntry;
import com.hitachivantara.hcp.standard.model.PutObjectResult;
import com.hitachivantara.hcp.standard.model.request.impl.ListObjectRequest;
import com.hitachivantara.test.hcp.TestDataFactory;
import com.hitachivantara.test.hcp.TestDataFactory.ContentType;
import com.hitachivantara.test.hcp.TestHCPBase;

/**
 * @author sohan
 *
 */
public class TestSpecialChar extends TestHCPBase {

	@Test
	public void testCreateObjWithSpecialCharsName() throws Exception {
		String specialChars = " `~!@#$%^&*()_+-= {}[]:;\"'<>,.?/|\\";
		char[] chars = specialChars.toCharArray();
		for (char c : chars) {
			File tempFile = TestDataFactory.createTestFile(ContentType.TIME);
			String key = moreThan100objs + "SpeicialChar" + c + "Char";
			String content = TestDataFactory.getContent(tempFile);
			// ---------------------------------------------------------------------------------------
			PutObjectResult result = hcpClient.putObject(key, tempFile);
			// ----------------------------------------------------------------------------------------
			HCPObject obj = hcpClient.getObject(key);
			String content1 = StreamUtils.inputStreamToString(obj.getContent(), true);

			assertTrue(content.equals(content1));
		}
		
		ListObjectHandler listener=new ListObjectHandler() {

			public NextAction foundObject(HCPObjectEntry objectEntry) throws HSCException {
				System.out.println(objectEntry.getName()+"\t"+objectEntry.getUrlName()+"\t"+objectEntry.getKey()+"\t"+objectEntry.getType());
				return null;
			}
			
		};
		ListObjectRequest request = new ListObjectRequest(moreThan100objs);
		hcpClient.listObjects(request, listener);
		
//		hcpClient.deleteDirectory(moreThan100objs);
	}
	
//	@Test
//	public void testCreateObjMetadataWithSpecialCharsName() throws Exception {
//		String specialChars = " `~!@#$%^&*()_+-= {}[]:;\"'<>,.?/|\\";
//		char[] chars = specialChars.toCharArray();
//		for (char c : chars) {
//			File tempFile = this.createTestFile(ContentType.TIME);
//			String key = moreThan100objs + "SpeicialChar" + c + "Char";
//			String content = this.getContent(tempFile);
//			// ---------------------------------------------------------------------------------------
//			PutObjectResult result = hcpClient.putObject(key, tempFile);
//			// ----------------------------------------------------------------------------------------
//			HCPObject obj = hcpClient.getObject(key);
//			String content1 = StreamUtils.inputStreamToString(obj.getContent(), true);
//
//			assertTrue(content.equals(content1));
//		}
//	}

}